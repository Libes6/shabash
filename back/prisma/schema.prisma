generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Favorite {
  id   Int    @id @default(autoincrement())
  text String
}

model User {
  id Int @id @default(autoincrement())

  username      String?
  email         String?  @unique
  emailVerified Boolean  @default(false)
  image         String?
  password      String
  phone         String   @default("")
  description   String   @default("")
  raiting       Int      @default(0)
  tag           String   @default("")
  flag          String   @default("")
  createdAt     DateTime @default(now()) @map("created_at")
  updateAt      DateTime @updatedAt @map("update_at")

  chat        Chat[]
  review      Review[]
  post        Post[]
  role        Roles?        @relation(fields: [rolesId], references: [id])
  rolesId     Int?
  ChatMessage ChatMessage[]
}

model Chat {
  id     Int    @id @default(autoincrement())
  User   User?  @relation(fields: [userId], references: [id])
  text   String
  userId Int?
}

model ChatMessage {
  id        Int      @id @default(autoincrement())
  chatId    Int?     @map("chat_id")
  text      String
  images    String[]
  tag       String
  flag      String
  createdAt DateTime @default(now()) @map("created_at")
  updateAt  DateTime @updatedAt @map("update_at")
  userId    Int?
  User      User?    @relation(fields: [userId], references: [id])
}

model Post {
  id      Int      @id @default(autoincrement())
  title   String
  content String
  images  String[]
  tag     String   @default("")
  flag    String   @default("")
  likes   Int      @default(0) @map("likes")
  views   Int      @default(0) @map("views")

  createdAt DateTime @default(now()) @map("created_at")
  updateAt  DateTime @updatedAt @map("update_at")
  user      User?    @relation(fields: [userId], references: [id])
  userId    Int?
  review    Review[]
}

model Roles {
  id      Int     @id @default(autoincrement())
  name    String
  isAdmin Boolean @default(false) @map("is_admin")
  User    User[]
}

model Review {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updateAt  DateTime @updatedAt @map("update_at")

  text   String
  rating Int
  tag    String
  flag   String
  user   User   @relation(fields: [userId], references: [id])
  userId Int    @map("user_id")
  Post   Post?  @relation(fields: [postId], references: [id])
  postId Int?
}
